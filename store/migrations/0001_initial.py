# Generated by Django 5.0.6 on 2025-07-24 14:34

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AboutPage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='العنوان الرئيسي')),
                ('content', models.TextField(verbose_name='المحتوى')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'صفحة من نحن',
                'verbose_name_plural': 'صفحة من نحن',
            },
        ),
        migrations.CreateModel(
            name='BlogCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='اسم التصنيف')),
                ('slug', models.SlugField(max_length=100, unique=True, verbose_name='المعرف')),
            ],
            options={
                'verbose_name': 'تصنيف مدونة',
                'verbose_name_plural': 'تصنيفات المدونة',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=200, verbose_name='الاسم')),
                ('slug', models.SlugField(max_length=200, unique=True, verbose_name='المعرف')),
            ],
            options={
                'verbose_name': 'فئة',
                'verbose_name_plural': 'الفئات',
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='Coupon',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=50, unique=True, verbose_name='رمز الكوبون')),
                ('discount', models.PositiveIntegerField(help_text='نسبة مئوية للخصم (مثال: 10 تعني 10%)', verbose_name='قيمة الخصم (%)')),
                ('valid_from', models.DateTimeField(verbose_name='صالح من تاريخ')),
                ('valid_to', models.DateTimeField(verbose_name='صالح حتى تاريخ')),
                ('active', models.BooleanField(default=True, verbose_name='فعال')),
            ],
            options={
                'verbose_name': 'كوبون',
                'verbose_name_plural': 'كوبونات الخصم',
            },
        ),
        migrations.CreateModel(
            name='Expense',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=255, verbose_name='الوصف')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='المبلغ')),
                ('date', models.DateField(default=django.utils.timezone.now, verbose_name='التاريخ')),
                ('category', models.CharField(blank=True, max_length=100, null=True, verbose_name='الفئة')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'مصروف',
                'verbose_name_plural': 'المصروفات',
                'ordering': ['-description'],
            },
        ),
        migrations.CreateModel(
            name='FAQ',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.CharField(max_length=255, verbose_name='السؤال')),
                ('answer', models.TextField(verbose_name='الإجابة')),
                ('display_order', models.PositiveIntegerField(default=0, help_text='يستخدم لترتيب عرض الأسئلة، الأقل يظهر أولاً.', verbose_name='ترتيب العرض')),
                ('active', models.BooleanField(default=True, verbose_name='فعال')),
            ],
            options={
                'verbose_name': 'سؤال شائع',
                'verbose_name_plural': 'الأسئلة الشائعة',
                'ordering': ['display_order', 'id'],
            },
        ),
        migrations.CreateModel(
            name='Invoice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('customer_name', models.CharField(max_length=255, verbose_name='الاسم الكامل')),
                ('customer_phone', models.CharField(blank=True, max_length=20, null=True, verbose_name='رقم الهاتف')),
                ('customer_email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='البريد الإلكتروني')),
                ('customer_address', models.TextField(blank=True, null=True, verbose_name='العنوان (مدينة – شارع – رقم منزل)')),
                ('date_issued', models.DateTimeField(auto_now_add=True, verbose_name='تاريخ الفاتورة')),
                ('payment_method', models.CharField(choices=[('cash', 'كاش'), ('visa', 'فيزا'), ('bank_transfer', 'تحويل بنكي'), ('cod', 'عند الاستلام')], default='cash', max_length=50, verbose_name='طريقة الدفع')),
                ('is_paid', models.BooleanField(default=False, verbose_name='هل تم الدفع؟')),
                ('internal_notes', models.TextField(blank=True, null=True, verbose_name='ملاحظات داخلية')),
                ('total_amount', models.DecimalField(decimal_places=2, default=0.0, max_digits=10, verbose_name='إجمالي المبلغ (قبل الضريبة والخصم)')),
                ('tax_rate', models.DecimalField(decimal_places=2, default=0.0, help_text='مثال: 14 لـ 14%', max_digits=5, verbose_name='نسبة الضريبة المضافة (%)')),
                ('discount_amount', models.DecimalField(decimal_places=2, default=0.0, max_digits=10, verbose_name='الخصم اليدوي')),
                ('final_total', models.DecimalField(decimal_places=2, default=0.0, max_digits=10, verbose_name='الإجمالي النهائي')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True, verbose_name='معرف الفاتورة الفريد')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'فاتورة',
                'verbose_name_plural': 'الفواتير',
                'ordering': ['-date_issued'],
            },
        ),
        migrations.CreateModel(
            name='PhoneOTP',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone_number', models.CharField(max_length=17, unique=True, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '+999999999'. Up to 15 digits allowed.", regex='^\\+?1?\\d{9,15}$')], verbose_name='رقم الهاتف')),
                ('otp', models.CharField(blank=True, max_length=6, null=True, verbose_name='رمز التحقق')),
                ('is_verified', models.BooleanField(default=False, verbose_name='تم التحقق')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='تاريخ الإنشاء')),
            ],
            options={
                'verbose_name': 'رمز تحقق عبر الهاتف',
                'verbose_name_plural': 'رموز التحقق عبر الهاتف',
            },
        ),
        migrations.CreateModel(
            name='Promotion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='العنوان')),
                ('image', models.ImageField(upload_to='promotions/', verbose_name='الصورة')),
                ('link', models.URLField(blank=True, null=True, verbose_name='الرابط (اختياري)')),
                ('active', models.BooleanField(default=True, verbose_name='فعال')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='تاريخ الإنشاء')),
            ],
            options={
                'verbose_name': 'عرض ترويجي',
                'verbose_name_plural': 'العروض الترويجية',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='SiteConfiguration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('site_name', models.CharField(default='متجري', max_length=255, verbose_name='اسم الموقع')),
                ('logo', models.ImageField(blank=True, null=True, upload_to='site/', verbose_name='شعار الموقع')),
                ('contact_email', models.EmailField(blank=True, max_length=255, verbose_name='البريد الإلكتروني للتواصل')),
                ('phone_number', models.CharField(blank=True, max_length=20, verbose_name='رقم الهاتف الأساسي')),
                ('address', models.TextField(blank=True, verbose_name='العنوان')),
                ('facebook_url', models.URLField(blank=True, null=True, verbose_name='رابط فيسبوك')),
                ('instagram_url', models.URLField(blank=True, null=True, verbose_name='رابط انستغرام')),
                ('twitter_url', models.URLField(blank=True, null=True, verbose_name='رابط تويتر (X)')),
                ('whatsapp_number', models.CharField(blank=True, help_text='استخدم الصيغة الدولية، مثال: +201234567890', max_length=20, null=True, verbose_name='رقم واتساب')),
            ],
            options={
                'verbose_name': 'إعدادات الموقع',
                'verbose_name_plural': 'إعدادات الموقع',
            },
        ),
        migrations.CreateModel(
            name='BlogPost',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='العنوان')),
                ('slug', models.SlugField(max_length=200, unique=True, verbose_name='المعرف')),
                ('image', models.ImageField(blank=True, null=True, upload_to='blog/%Y/%m/%d', verbose_name='الصورة')),
                ('content', models.TextField(verbose_name='المحتوى')),
                ('views', models.PositiveIntegerField(default=0, verbose_name='عدد المشاهدات')),
                ('published_date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='تاريخ النشر')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('active', models.BooleanField(default=True, verbose_name='فعال')),
                ('author', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='blog_posts', to=settings.AUTH_USER_MODEL, verbose_name='المؤلف')),
                ('category', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='posts', to='store.blogcategory', verbose_name='التصنيف')),
            ],
            options={
                'verbose_name': 'مقالة مدونة',
                'verbose_name_plural': 'مقالات المدونة',
                'ordering': ['-published_date'],
            },
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone_number', models.CharField(blank=True, max_length=20, null=True, unique=True, verbose_name='رقم الهاتف')),
                ('profile_picture', models.ImageField(blank=True, null=True, upload_to='profile_pics/', verbose_name='الصورة الشخصية')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='المستخدم')),
            ],
            options={
                'verbose_name': 'عميل',
                'verbose_name_plural': 'العملاء',
            },
        ),
        migrations.CreateModel(
            name='Cart',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='تاريخ الإنشاء')),
                ('customer', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='store.customer', verbose_name='العميل')),
            ],
            options={
                'verbose_name': 'سلة مشتريات',
                'verbose_name_plural': 'سلال المشتريات',
            },
        ),
        migrations.CreateModel(
            name='Inquiry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='الاسم')),
                ('email', models.EmailField(max_length=254, verbose_name='البريد الإلكتروني')),
                ('phone', models.CharField(blank=True, max_length=20, verbose_name='رقم الهاتف')),
                ('subject', models.CharField(max_length=200, verbose_name='الموضوع')),
                ('message', models.TextField(verbose_name='الرسالة')),
                ('is_replied', models.BooleanField(default=False, verbose_name='تم الرد')),
                ('reply', models.TextField(blank=True, verbose_name='الرد')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='المستخدم')),
            ],
            options={
                'verbose_name': 'استفسار',
                'verbose_name_plural': 'الاستفسارات',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='العنوان')),
                ('message', models.TextField(verbose_name='الرسالة')),
                ('read', models.BooleanField(default=False, verbose_name='مقروء')),
                ('image_url', models.URLField(blank=True, help_text='اختياري: رابط لصورة كبيرة تظهر في الإشعار.', null=True, verbose_name='رابط الصورة')),
                ('target_url', models.URLField(blank=True, help_text='اختياري: الرابط الذي يتم فتحه عند النقر على الإشعار.', null=True, verbose_name='الرابط الهدف')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='المستخدم')),
            ],
            options={
                'verbose_name': 'إشعار',
                'verbose_name_plural': 'الإشعارات',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_ordered', models.DateTimeField(auto_now_add=True, verbose_name='تاريخ الطلب')),
                ('complete', models.BooleanField(default=False, verbose_name='مكتمل')),
                ('status', models.CharField(choices=[('pending', 'قيد الانتظار'), ('processing', 'قيد التجهيز'), ('shipped', 'تم الشحن'), ('delivered', 'تم التسليم'), ('cancelled', 'ملغي'), ('returned', 'مرتجع'), ('confirmed', 'تم التأكيد'), ('address_pending', 'بانتظار تأكيد العنوان'), ('cancelled_by_customer', 'ملغي من قبل العميل')], default='pending', max_length=30, verbose_name='الحالة')),
                ('transaction_id', models.CharField(blank=True, max_length=100, null=True)),
                ('shipping_address', models.TextField(verbose_name='عنوان الشحن')),
                ('phone_number', models.CharField(max_length=20, verbose_name='رقم الهاتف')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='ملاحظات')),
                ('total_before_discount', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='المبلغ قبل الخصم')),
                ('final_total', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='المبلغ النهائي')),
                ('payment_method', models.CharField(choices=[('kashier', 'Kashier'), ('cod', 'Cash on Delivery')], default='kashier', max_length=20, verbose_name='طريقة الدفع')),
                ('payment_status', models.CharField(choices=[('pending', 'Pending'), ('paid', 'Paid'), ('failed', 'Failed')], default='pending', max_length=20, verbose_name='حالة الدفع')),
                ('coupon', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='store.coupon', verbose_name='الكوبون')),
                ('customer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='store.customer', verbose_name='العميل')),
            ],
            options={
                'verbose_name': 'طلب',
                'verbose_name_plural': 'الطلبات',
                'ordering': ['-date_ordered'],
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=200, verbose_name='الاسم')),
                ('slug', models.SlugField(max_length=200, verbose_name='المعرف')),
                ('image', models.ImageField(blank=True, upload_to='products/%Y/%m/%d', verbose_name='الصورة')),
                ('description', models.TextField(blank=True, verbose_name='الوصف')),
                ('price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='السعر')),
                ('cost_price', models.DecimalField(decimal_places=2, default=0.0, max_digits=10, verbose_name='سعر التكلفة')),
                ('stock', models.IntegerField(default=0, verbose_name='الكمية المتوفرة')),
                ('available', models.BooleanField(default=True, verbose_name='متوفر')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='تاريخ الإنشاء')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='تاريخ التحديث')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='products', to='store.category', verbose_name='الفئة')),
            ],
            options={
                'verbose_name': 'منتج',
                'verbose_name_plural': 'المنتجات',
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='OrderItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.IntegerField(blank=True, default=0, null=True, verbose_name='الكمية')),
                ('price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='السعر عند الشراء')),
                ('date_added', models.DateTimeField(auto_now_add=True, verbose_name='تاريخ الإضافة')),
                ('order', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='store.order', verbose_name='الطلب')),
                ('product', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='store.product', verbose_name='المنتج')),
            ],
            options={
                'verbose_name': 'عنصر الطلب',
                'verbose_name_plural': 'عناصر الطلب',
            },
        ),
        migrations.CreateModel(
            name='InvoiceItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='اسم المنتج/الخدمة (إذا لم يتم اختيار منتج)')),
                ('quantity', models.PositiveIntegerField(default=1, verbose_name='الكمية')),
                ('unit_price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='سعر الوحدة')),
                ('subtotal', models.DecimalField(decimal_places=2, default=0.0, editable=False, max_digits=10, verbose_name='الإجمالي الفرعي')),
                ('invoice', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='store.invoice', verbose_name='الفاتورة')),
                ('product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='store.product', verbose_name='المنتج')),
            ],
            options={
                'verbose_name': 'عنصر فاتورة',
                'verbose_name_plural': 'عناصر الفاتورة',
            },
        ),
        migrations.CreateModel(
            name='CartItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField(default=1, verbose_name='الكمية')),
                ('cart', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='store.cart', verbose_name='سلة المشتريات')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='store.product', verbose_name='المنتج')),
            ],
            options={
                'verbose_name': 'عنصر السلة',
                'verbose_name_plural': 'عناصر السلة',
            },
        ),
        migrations.CreateModel(
            name='PushSubscription',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('endpoint', models.URLField(max_length=500, unique=True)),
                ('p256dh', models.CharField(max_length=200)),
                ('auth', models.CharField(max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='push_subscriptions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'اشتراك إشعار الدفع',
                'verbose_name_plural': 'اشتراكات إشعارات الدفع',
            },
        ),
        migrations.CreateModel(
            name='StoredPaymentMethod',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nickname', models.CharField(blank=True, max_length=100, null=True, verbose_name='اسم مستعار للبطاقة')),
                ('gateway_token', models.CharField(help_text='Token from the payment gateway (e.g., Kashier, Stripe)', max_length=255)),
                ('card_brand', models.CharField(max_length=50, verbose_name='نوع البطاقة (e.g., Visa)')),
                ('last_four_digits', models.CharField(max_length=4, verbose_name='آخر 4 أرقام')),
                ('is_default', models.BooleanField(default=False, verbose_name='طريقة الدفع الافتراضية')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payment_methods', to='store.customer', verbose_name='العميل')),
            ],
            options={
                'verbose_name': 'طريقة دفع مخزنة',
                'verbose_name_plural': 'طرق الدفع المخزنة',
            },
        ),
        migrations.CreateModel(
            name='TeamMember',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='الاسم')),
                ('role', models.CharField(max_length=100, verbose_name='المنصب')),
                ('image', models.ImageField(upload_to='team/', verbose_name='الصورة')),
                ('display_order', models.PositiveIntegerField(default=0, verbose_name='ترتيب العرض')),
                ('about_page', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='team_members', to='store.aboutpage', verbose_name='صفحة من نحن')),
            ],
            options={
                'verbose_name': 'عضو الفريق',
                'verbose_name_plural': 'أعضاء الفريق',
                'ordering': ['display_order'],
            },
        ),
        migrations.CreateModel(
            name='Wishlist',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('customer', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='store.customer', verbose_name='العميل')),
            ],
            options={
                'verbose_name': 'قائمة مفضلات',
                'verbose_name_plural': 'قوائم المفضلات',
            },
        ),
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address_type', models.CharField(choices=[('shipping', 'Shipping'), ('billing', 'Billing')], default='shipping', max_length=10, verbose_name='نوع العنوان')),
                ('street_address', models.CharField(max_length=255, verbose_name='عنوان الشارع')),
                ('city', models.CharField(max_length=100, verbose_name='المدينة')),
                ('state', models.CharField(blank=True, max_length=100, null=True, verbose_name='المحافظة/الولاية')),
                ('zip_code', models.CharField(max_length=20, verbose_name='الرمز البريدي')),
                ('country', models.CharField(max_length=100, verbose_name='الدولة')),
                ('is_default', models.BooleanField(default=False, verbose_name='العنوان الافتراضي')),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='addresses', to='store.customer', verbose_name='العميل')),
            ],
            options={
                'verbose_name': 'عنوان',
                'verbose_name_plural': 'العناوين',
                'unique_together': {('customer', 'address_type', 'is_default')},
            },
        ),
        migrations.CreateModel(
            name='WishlistItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_added', models.DateTimeField(auto_now_add=True)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='store.product', verbose_name='المنتج')),
                ('wishlist', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='store.wishlist', verbose_name='قائمة المفضلات')),
            ],
            options={
                'verbose_name': 'عنصر مفضلة',
                'verbose_name_plural': 'عناصر المفضلات',
                'unique_together': {('wishlist', 'product')},
            },
        ),
    ]
